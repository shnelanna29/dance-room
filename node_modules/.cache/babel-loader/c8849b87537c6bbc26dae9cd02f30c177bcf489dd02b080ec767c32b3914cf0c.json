{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nconst getBookings = () => {\n  return JSON.parse(localStorage.getItem('bookings') || '[]');\n};\nconst addBooking = booking => {\n  const bookings = getBookings();\n  const newBookings = [...bookings, booking];\n  localStorage.setItem('bookings', JSON.stringify(newBookings));\n  return newBookings;\n};\nconst removeBooking = bookingId => {\n  const bookings = getBookings();\n  const filteredBookings = bookings.filter(b => b.id !== bookingId);\n  localStorage.setItem('bookings', JSON.stringify(filteredBookings));\n  return filteredBookings;\n};\nexport const useBookings = () => {\n  _s();\n  return useQuery({\n    queryKey: ['bookings'],\n    queryFn: getBookings,\n    staleTime: 1 * 60 * 1000\n  });\n};\n_s(useBookings, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nexport const useAddBooking = () => {\n  _s2();\n  const queryClient = useQueryClient();\n  return useMutation({\n    mutationFn: addBooking,\n    onMutate: async newBooking => {\n      await queryClient.cancelQueries({\n        queryKey: ['bookings']\n      });\n      const previousBookings = queryClient.getQueryData(['bookings']);\n      queryClient.setQueryData(['bookings'], old => old ? [...old, newBooking] : [newBooking]);\n      return {\n        previousBookings\n      };\n    },\n    onError: (err, newBooking, context) => {\n      queryClient.setQueryData(['bookings'], context.previousBookings);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({\n        queryKey: ['bookings']\n      });\n    }\n  });\n};\n_s2(useAddBooking, \"YK0wzM21ECnncaq5SECwU+/SVdQ=\", false, function () {\n  return [useQueryClient, useMutation];\n});\nexport const useRemoveBooking = () => {\n  _s3();\n  const queryClient = useQueryClient();\n  return useMutation({\n    mutationFn: removeBooking,\n    onSuccess: () => {\n      queryClient.invalidateQueries({\n        queryKey: ['bookings']\n      });\n    }\n  });\n};\n_s3(useRemoveBooking, \"YK0wzM21ECnncaq5SECwU+/SVdQ=\", false, function () {\n  return [useQueryClient, useMutation];\n});","map":{"version":3,"names":["useQuery","useMutation","useQueryClient","getBookings","JSON","parse","localStorage","getItem","addBooking","booking","bookings","newBookings","setItem","stringify","removeBooking","bookingId","filteredBookings","filter","b","id","useBookings","_s","queryKey","queryFn","staleTime","useAddBooking","_s2","queryClient","mutationFn","onMutate","newBooking","cancelQueries","previousBookings","getQueryData","setQueryData","old","onError","err","context","onSuccess","invalidateQueries","useRemoveBooking","_s3"],"sources":["C:/Users/Admin/Desktop/Диск D/колледж/Бутов/DR/src/hooks/useBookings.js"],"sourcesContent":["import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\r\n\r\nconst getBookings = () => {\r\n  return JSON.parse(localStorage.getItem('bookings') || '[]');\r\n};\r\n\r\nconst addBooking = (booking) => {\r\n  const bookings = getBookings();\r\n  const newBookings = [...bookings, booking];\r\n  localStorage.setItem('bookings', JSON.stringify(newBookings));\r\n  return newBookings;\r\n};\r\n\r\nconst removeBooking = (bookingId) => {\r\n  const bookings = getBookings();\r\n  const filteredBookings = bookings.filter(b => b.id !== bookingId);\r\n  localStorage.setItem('bookings', JSON.stringify(filteredBookings));\r\n  return filteredBookings;\r\n};\r\n\r\nexport const useBookings = () => {\r\n  return useQuery({\r\n    queryKey: ['bookings'],\r\n    queryFn: getBookings,\r\n    staleTime: 1 * 60 * 1000,\r\n  });\r\n};\r\n\r\nexport const useAddBooking = () => {\r\n  const queryClient = useQueryClient();\r\n\r\n  return useMutation({\r\n    mutationFn: addBooking,\r\n    onMutate: async (newBooking) => {\r\n      await queryClient.cancelQueries({ queryKey: ['bookings'] });\r\n      \r\n      const previousBookings = queryClient.getQueryData(['bookings']);\r\n      \r\n      queryClient.setQueryData(['bookings'], (old) => \r\n        old ? [...old, newBooking] : [newBooking]\r\n      );\r\n\r\n      return { previousBookings };\r\n    },\r\n    onError: (err, newBooking, context) => {\r\n      queryClient.setQueryData(['bookings'], context.previousBookings);\r\n    },\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries({ queryKey: ['bookings'] });\r\n    },\r\n  });\r\n};\r\n\r\nexport const useRemoveBooking = () => {\r\n  const queryClient = useQueryClient();\r\n\r\n  return useMutation({\r\n    mutationFn: removeBooking,\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries({ queryKey: ['bookings'] });\r\n    },\r\n  });\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}